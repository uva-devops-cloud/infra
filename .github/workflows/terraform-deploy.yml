name: Terraform Deployment (Reusable)

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      aws_account_id:
        required: true
        type: string
    secrets:
      google_client_secret:
        required: true
      ssh_public_key:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    # Add environment mapping here - this will trigger approval for production
    environment: ${{ inputs.environment == 'prod' && 'production' || 'development' }}
    env:
      TF_VERSION: "1.11.0-rc3"
      AWS_REGION: "eu-west-2"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{inputs.aws_account_id}}:role/GitHubTerraformDeployRole
          role-session-name: GitHubTerraformSession
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./environments/${{inputs.environment}}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./environments/${{inputs.environment}}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./environments/${{inputs.environment}}

      - name: Terraform Plan
        run: |
          terraform plan \
            -var-file=${{inputs.environment}}.tfvars \
            -var="google_client_secret=${{ secrets.google_client_secret }}" \
            -var="ssh_public_key=${{ secrets.ssh_public_key }}" \
            -out=tfplan
        working-directory: ./environments/${{inputs.environment}}

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve tfplan
      #   working-directory: ./environments/${{inputs.environment}}
